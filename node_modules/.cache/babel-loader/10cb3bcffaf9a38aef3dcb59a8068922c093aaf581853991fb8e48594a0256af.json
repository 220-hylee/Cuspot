{"ast":null,"code":"var _jsxFileName = \"/Users/heeaelee/Documents/github/fb_test/facebook-clone/src/components/form/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Chip, Paper, Divider, LinearProgress } from \"@material-ui/core\";\nimport imageCompression from \"browser-image-compression\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport VideocamRoundedIcon from \"@material-ui/icons/VideocamRounded\";\nimport PhotoRoundedIcon from \"@material-ui/icons/PhotoRounded\";\nimport EmojiEmotionsOutlinedIcon from \"@material-ui/icons/EmojiEmotionsOutlined\";\nimport firebase from \"firebase\";\nimport { v4 as uuid } from \"uuid\";\nimport db, { storage } from \"../../firebase\";\nimport Styles from \"./Style\";\nimport swal from \"@sweetalert/with-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const classes = Styles();\n  const {\n    displayName,\n    photoURL\n  } = useSelector(state => state.user);\n  const [uploadData, setUploadData] = useState({\n    description: \"\",\n    file: {\n      type: \"\",\n      name: \"\",\n      data: \"\"\n    }\n  });\n  const [progress, setProgress] = useState(\"\");\n  const uploadToFirebaseDB = fileData => {\n    // uploading to collection called posts\n    db.collection(\"posts\").add({\n      profile: photoURL,\n      username: displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      description: uploadData.description,\n      fileType: uploadData.file.type,\n      fileName: uploadData.file.name,\n      fileData: fileData\n    }).then(() => resetState());\n  };\n  const handleSubmitButton = e => {\n    e.preventDefault();\n\n    // verify atleast one of the input fields are not empyt\n    if (uploadData.description || uploadData.file.data) {\n      // if file input is true...upload the file to Fire-Store\n      if (uploadData.file.data) {\n        const id = uuid();\n        const uploadTask = storage.ref(`posts/${id}`).putString(uploadData.file.data, \"data_url\");\n        uploadTask.on(\"state_changed\", snapshot => {\n          const value = Math.floor(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n          setProgress(value);\n        }, error => {\n          alert(error);\n        }, () => {\n          storage.ref(\"posts\").child(id).getDownloadURL().then(url => uploadToFirebaseDB(url));\n        });\n\n        // do not go further..\n        return;\n      }\n      // if not file input provided\n      uploadToFirebaseDB(uploadData.file.data);\n    } else {\n      swal(\"ðŸ˜• Input field can not be empty\");\n    }\n  };\n\n  // if file name is too long.. compress it\n  const fileNameCompressor = (str, limit) => {\n    let fileName = str;\n    const arr = str.split(\".\");\n    const name = arr[0];\n    const ext = arr[arr.length - 1];\n    if (name.length > limit) {\n      fileName = name.substring(0, limit).trim() + \"... .\" + ext;\n    }\n    return fileName;\n  };\n  const imageUploadHandler = async (e, type) => {\n    const inputFile = e.target.files[0];\n    const _inputFile = inputFile.type.split(\"/\");\n    const inputFileType = _inputFile[0];\n    const inputFileExec = _inputFile[1];\n    const inputFileName = fileNameCompressor(inputFile.name, 20);\n    const fileSize = inputFile.size / (1024 * 1024);\n    const acceptedImageFormats = [\"png\", \"jpg\", \"jpeg\", \"gif\"];\n    const acceptedVideoFormats = [\"mp4\", \"mkv\", \"3gp\", \"avi\", \"webm\"];\n    switch (type) {\n      case \"video\":\n        if (!acceptedVideoFormats.some(format => format.includes(inputFileExec))) {\n          swal(\"ðŸ”´ Please select video format of mp4 , mkv , av \");\n          e.target.value = \"\";\n          return;\n        }\n        if (fileSize > 10) {\n          swal(\"ðŸ”´ Please select a video less than 10MB file size\");\n          e.target.value = \"\";\n          return;\n        }\n        break;\n      case \"image\":\n        if (!acceptedImageFormats.some(format => format.includes(inputFileExec))) {\n          swal(\"ðŸ”´ Please select image format of png , jpg , jpeg , gif \");\n          e.target.value = \"\";\n          return;\n        }\n        if (fileSize > 2) {\n          swal(\"ðŸ”´ Please select an image less than 2MB file size\");\n          e.target.value = \"\";\n          return;\n        }\n        break;\n      default:\n        swal(\"ðŸ˜® OOPS...!!! Invalid file format\");\n        e.target.value = \"\";\n        return;\n    }\n    let compressedInputFile = inputFile;\n    if (inputFileType === \"image\") {\n      //compression algorithm\n      const compressionOptions = {\n        maxSizeMB: 1,\n        maxWidthOrHeight: 1920,\n        useWebWorker: true\n      };\n      try {\n        compressedInputFile = await imageCompression(inputFile, compressionOptions);\n      } catch (error) {\n        alert(error);\n      }\n    }\n    let inputFileDataBase64;\n    const file = new FileReader();\n    if (compressedInputFile) {\n      file.onloadend = fileLoadedEvent => {\n        inputFileDataBase64 = fileLoadedEvent.target.result;\n        setUploadData({\n          ...uploadData,\n          file: {\n            type: inputFileType,\n            name: inputFileName,\n            data: inputFileDataBase64\n          }\n        });\n      };\n      file.readAsDataURL(compressedInputFile);\n    }\n\n    // clear the file input event value\n    e.target.value = \"\";\n  };\n  const resetState = () => {\n    setUploadData({\n      description: \"\",\n      file: {\n        type: \"\",\n        name: \"\",\n        data: \"\"\n      }\n    });\n    setProgress(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.upload,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.upload__header,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: photoURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.header__form,\n        onSubmit: handleSubmitButton,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: `What's on your mind, ${displayName}?`,\n          value: uploadData.description,\n          onChange: e => setUploadData({\n            ...uploadData,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"upload-image\",\n          type: \"file\",\n          accept: \"image/*\",\n          hidden: true,\n          onChange: e => imageUploadHandler(e, \"image\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"upload-video\",\n          type: \"file\",\n          accept: \"video/*\",\n          hidden: true,\n          onChange: e => imageUploadHandler(e, \"video\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), uploadData.file.name && !progress && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.selectedFile,\n      children: /*#__PURE__*/_jsxDEV(Chip, {\n        color: \"primary\",\n        size: \"small\",\n        onDelete: resetState,\n        icon: uploadData.file.type === \"image\" ? /*#__PURE__*/_jsxDEV(PhotoRoundedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 54\n        }, this) : /*#__PURE__*/_jsxDEV(VideocamRoundedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 77\n        }, this),\n        label: uploadData.file.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }, this), progress ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.uploading,\n      children: [/*#__PURE__*/_jsxDEV(LinearProgress, {\n        variant: \"determinate\",\n        value: progress,\n        className: classes.progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [progress, \" %\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.upload__media,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"upload-video\",\n        className: classes.media__options,\n        children: [/*#__PURE__*/_jsxDEV(VideocamRoundedIcon, {\n          style: {\n            color: \"red\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"upload-image\",\n        className: classes.media__options,\n        children: [/*#__PURE__*/_jsxDEV(PhotoRoundedIcon, {\n          style: {\n            color: \"green\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.media__options,\n        children: [/*#__PURE__*/_jsxDEV(EmojiEmotionsOutlinedIcon, {\n          style: {\n            color: \"orange\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Feeling/Activity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"EWdDw7VNJp10+ZIK0Cdptz/bRu8=\", false, function () {\n  return [useSelector];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useSelector","Chip","Paper","Divider","LinearProgress","imageCompression","Avatar","VideocamRoundedIcon","PhotoRoundedIcon","EmojiEmotionsOutlinedIcon","firebase","v4","uuid","db","storage","Styles","swal","Form","classes","displayName","photoURL","state","user","uploadData","setUploadData","description","file","type","name","data","progress","setProgress","uploadToFirebaseDB","fileData","collection","add","profile","username","timestamp","firestore","FieldValue","serverTimestamp","fileType","fileName","then","resetState","handleSubmitButton","e","preventDefault","id","uploadTask","ref","putString","on","snapshot","value","Math","floor","bytesTransferred","totalBytes","error","alert","child","getDownloadURL","url","fileNameCompressor","str","limit","arr","split","ext","length","substring","trim","imageUploadHandler","inputFile","target","files","_inputFile","inputFileType","inputFileExec","inputFileName","fileSize","size","acceptedImageFormats","acceptedVideoFormats","some","format","includes","compressedInputFile","compressionOptions","maxSizeMB","maxWidthOrHeight","useWebWorker","inputFileDataBase64","FileReader","onloadend","fileLoadedEvent","result","readAsDataURL","upload","upload__header","header__form","selectedFile","uploading","upload__media","media__options","color"],"sources":["/Users/heeaelee/Documents/github/fb_test/facebook-clone/src/components/form/Form.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Chip, Paper, Divider, LinearProgress } from \"@material-ui/core\";\nimport imageCompression from \"browser-image-compression\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport VideocamRoundedIcon from \"@material-ui/icons/VideocamRounded\";\nimport PhotoRoundedIcon from \"@material-ui/icons/PhotoRounded\";\nimport EmojiEmotionsOutlinedIcon from \"@material-ui/icons/EmojiEmotionsOutlined\";\nimport firebase from \"firebase\";\nimport { v4 as uuid } from \"uuid\";\nimport db, { storage } from \"../../firebase\";\nimport Styles from \"./Style\";\nimport swal from \"@sweetalert/with-react\";\n\nconst Form = () => {\n  const classes = Styles();\n  const { displayName, photoURL } = useSelector((state) => state.user);\n\n  const [uploadData, setUploadData] = useState({\n    description: \"\",\n    file: {\n      type: \"\",\n      name: \"\",\n      data: \"\",\n    },\n  });\n\n  const [progress, setProgress] = useState(\"\");\n\n  const uploadToFirebaseDB = (fileData) => {\n    // uploading to collection called posts\n    db.collection(\"posts\")\n      .add({\n        profile: photoURL,\n        username: displayName,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        description: uploadData.description,\n        fileType: uploadData.file.type,\n        fileName: uploadData.file.name,\n        fileData: fileData,\n      })\n      .then(() => resetState());\n  };\n\n  const handleSubmitButton = (e) => {\n    e.preventDefault();\n\n    // verify atleast one of the input fields are not empyt\n    if (uploadData.description || uploadData.file.data) {\n      // if file input is true...upload the file to Fire-Store\n      if (uploadData.file.data) {\n        const id = uuid();\n        const uploadTask = storage.ref(`posts/${id}`).putString(uploadData.file.data, \"data_url\");\n        uploadTask.on(\n          \"state_changed\",\n          (snapshot) => {\n            const value = Math.floor((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n            setProgress(value);\n          },\n\n          (error) => {\n            alert(error);\n          },\n\n          () => {\n            storage\n              .ref(\"posts\")\n              .child(id)\n              .getDownloadURL()\n              .then((url) => uploadToFirebaseDB(url));\n          }\n        );\n\n        // do not go further..\n        return;\n      }\n      // if not file input provided\n      uploadToFirebaseDB(uploadData.file.data);\n    } else {\n      swal(\"ðŸ˜• Input field can not be empty\");\n    }\n  };\n\n  // if file name is too long.. compress it\n  const fileNameCompressor = (str, limit) => {\n    let fileName = str;\n    const arr = str.split(\".\");\n    const name = arr[0];\n    const ext = arr[arr.length - 1];\n\n    if (name.length > limit) {\n      fileName = name.substring(0, limit).trim() + \"... .\" + ext;\n    }\n    return fileName;\n  };\n\n  const imageUploadHandler = async (e, type) => {\n    const inputFile = e.target.files[0];\n    const _inputFile = inputFile.type.split(\"/\");\n    const inputFileType = _inputFile[0];\n    const inputFileExec = _inputFile[1];\n    const inputFileName = fileNameCompressor(inputFile.name, 20);\n\n    const fileSize = inputFile.size / (1024 * 1024);\n\n    const acceptedImageFormats = [\"png\", \"jpg\", \"jpeg\", \"gif\"];\n    const acceptedVideoFormats = [\"mp4\", \"mkv\", \"3gp\", \"avi\", \"webm\"];\n\n    switch (type) {\n      case \"video\":\n        if (!acceptedVideoFormats.some((format) => format.includes(inputFileExec))) {\n          swal(\"ðŸ”´ Please select video format of mp4 , mkv , av \");\n          e.target.value = \"\";\n          return;\n        }\n        if (fileSize > 10) {\n          swal(\"ðŸ”´ Please select a video less than 10MB file size\");\n          e.target.value = \"\";\n          return;\n        }\n        break;\n      case \"image\":\n        if (!acceptedImageFormats.some((format) => format.includes(inputFileExec))) {\n          swal(\"ðŸ”´ Please select image format of png , jpg , jpeg , gif \");\n          e.target.value = \"\";\n          return;\n        }\n        if (fileSize > 2) {\n          swal(\"ðŸ”´ Please select an image less than 2MB file size\");\n          e.target.value = \"\";\n          return;\n        }\n        break;\n      default:\n        swal(\"ðŸ˜® OOPS...!!! Invalid file format\");\n        e.target.value = \"\";\n        return;\n    }\n\n    let compressedInputFile = inputFile;\n    if (inputFileType === \"image\") {\n      //compression algorithm\n      const compressionOptions = {\n        maxSizeMB: 1,\n        maxWidthOrHeight: 1920,\n        useWebWorker: true,\n      };\n\n      try {\n        compressedInputFile = await imageCompression(inputFile, compressionOptions);\n      } catch (error) {\n        alert(error);\n      }\n    }\n\n    let inputFileDataBase64;\n    const file = new FileReader();\n    if (compressedInputFile) {\n      file.onloadend = (fileLoadedEvent) => {\n        inputFileDataBase64 = fileLoadedEvent.target.result;\n        setUploadData({\n          ...uploadData,\n          file: {\n            type: inputFileType,\n            name: inputFileName,\n            data: inputFileDataBase64,\n          },\n        });\n      };\n      file.readAsDataURL(compressedInputFile);\n    }\n\n    // clear the file input event value\n    e.target.value = \"\";\n  };\n\n  const resetState = () => {\n    setUploadData({\n      description: \"\",\n      file: {\n        type: \"\",\n        name: \"\",\n        data: \"\",\n      },\n    });\n    setProgress(\"\");\n  };\n\n  return (\n    <Paper className={classes.upload}>\n      <div className={classes.upload__header}>\n        <Avatar src={photoURL} />\n        <form className={classes.header__form} onSubmit={handleSubmitButton}>\n          <input\n            placeholder={`What's on your mind, ${displayName}?`}\n            value={uploadData.description}\n            onChange={(e) => setUploadData({ ...uploadData, description: e.target.value })}\n          />\n          <input\n            id=\"upload-image\"\n            type=\"file\"\n            accept=\"image/*\"\n            hidden\n            onChange={(e) => imageUploadHandler(e, \"image\")}\n          />\n          <input\n            id=\"upload-video\"\n            type=\"file\"\n            accept=\"video/*\"\n            hidden\n            onChange={(e) => imageUploadHandler(e, \"video\")}\n          />\n          <button type=\"submit\">Post</button>\n        </form>\n      </div>\n      {uploadData.file.name && !progress && (\n        <div className={classes.selectedFile}>\n          <Chip\n            color=\"primary\"\n            size=\"small\"\n            onDelete={resetState}\n            icon={uploadData.file.type === \"image\" ? <PhotoRoundedIcon /> : <VideocamRoundedIcon />}\n            label={uploadData.file.name}\n          />\n        </div>\n      )}\n      {progress ? (\n        <div className={classes.uploading}>\n          <LinearProgress variant=\"determinate\" value={progress} className={classes.progress} />\n          <p>{progress} %</p>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <Divider />\n\n      <div className={classes.upload__media}>\n        <label htmlFor=\"upload-video\" className={classes.media__options}>\n          <VideocamRoundedIcon style={{ color: \"red\" }} />\n          <h4>Video</h4>\n        </label>\n        <label htmlFor=\"upload-image\" className={classes.media__options}>\n          <PhotoRoundedIcon style={{ color: \"green\" }} />\n          <h4>Photo</h4>\n        </label>\n        <div className={classes.media__options}>\n          <EmojiEmotionsOutlinedIcon style={{ color: \"orange\" }} />\n          <h4>Feeling/Activity</h4>\n        </div>\n      </div>\n    </Paper>\n  );\n};\n\nexport default Form;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}