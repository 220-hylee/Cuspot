{"ast":null,"code":"'use strict';\n\nvar _toConsumableArray = require(\"/Users/heeaelee/Documents/github/fb_test/facebook-clone/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _regeneratorRuntime = require(\"/Users/heeaelee/Documents/github/fb_test/facebook-clone/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/Users/heeaelee/Documents/github/fb_test/facebook-clone/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\nvar swal = _interopDefault(require('sweetalert'));\nvar index = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var newOptions,\n      _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getOptions.apply(void 0, _args);\n          case 2:\n            newOptions = _context.sent;\n            return _context.abrupt(\"return\", swal(newOptions));\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return function index() {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar bindActions = function bindActions(swalInstance) {\n  for (var method in swal) {\n    swalInstance[method] = swal[method];\n  }\n};\nvar getOptions = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(params, _ref2) {\n    var identifier, transformer, newOptions, lastParam;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            identifier = _ref2.identifier, transformer = _ref2.transformer;\n            _context2.next = 3;\n            return transformParams(params, identifier, transformer);\n          case 3:\n            newOptions = _context2.sent;\n            newOptions = Object.assign({}, parseTextParams(params), newOptions);\n            lastParam = params[params.length - 1];\n            /*\n             * So that we don't lose other specified options\n             * such as buttons... etc.\n             */\n            if (isOptionsParam(lastParam, identifier)) {\n              newOptions = Object.assign({}, lastParam, newOptions);\n            }\n            return _context2.abrupt(\"return\", newOptions);\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return function getOptions(_x, _x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nvar parseTextParams = function parseTextParams(params) {\n  var options = {};\n  var isString = function isString(param) {\n    return typeof param === \"string\";\n  };\n  if (isString(params[0]) && !isString(params[1])) {\n    options.text = params[0];\n  }\n  if (isString(params[1])) {\n    options.title = params[0];\n    options.text = params[1];\n  }\n  if (isString(params[2])) {\n    options.icon = params[2];\n  }\n  return options;\n};\n\n// Return true if param is a SwalOptions object\nvar isOptionsParam = function isOptionsParam(param, isTransformable) {\n  return param.constructor === Object && !isTransformable(param);\n};\n\n/*\n * @params: (SwalParams, Function, Function, boolean)\n * @returns: SwalOptions\n */\nvar transformParams = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(params, isTransformable, transformer) {\n    var isAsync, transformSingleParam, transformContentOption, newOpts;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            // Check if the transform returns a DOM synchronously\n            // or if it is a promise:\n            isAsync = transformer() instanceof Promise;\n            /*\n             * Example:\n             *   swal(<div>Hello!</div>);\n             */\n            transformSingleParam = /*#__PURE__*/function () {\n              var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n                var el, newContent;\n                return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        el = params[0];\n                        if (isTransformable(el)) {\n                          _context3.next = 3;\n                          break;\n                        }\n                        return _context3.abrupt(\"return\");\n                      case 3:\n                        _context3.next = 5;\n                        return transformEl(el, transformer, isAsync);\n                      case 5:\n                        newContent = _context3.sent;\n                        return _context3.abrupt(\"return\", {\n                          content: newContent\n                        });\n                      case 7:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n              return function transformSingleParam() {\n                return _ref5.apply(this, arguments);\n              };\n            }();\n            /*\n             * Example:\n             *   swal(\"Hi\", { \n             *     content: <div>Hello!</div> \n             *   })\n             */\n            transformContentOption = /*#__PURE__*/function () {\n              var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n                var lastParamIndex, lastParam, content, button;\n                return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        lastParamIndex = params.length - 1;\n                        lastParam = params[lastParamIndex];\n                        if (!(!lastParam || !lastParam.content)) {\n                          _context4.next = 4;\n                          break;\n                        }\n                        return _context4.abrupt(\"return\");\n                      case 4:\n                        content = lastParam.content, button = lastParam.button;\n                        if (!isTransformable(content)) {\n                          _context4.next = 9;\n                          break;\n                        }\n                        _context4.next = 8;\n                        return transformEl(content, transformer, isAsync);\n                      case 8:\n                        content = _context4.sent;\n                      case 9:\n                        return _context4.abrupt(\"return\", {\n                          content: content\n                          //button,\n                        });\n                      case 10:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4);\n              }));\n              return function transformContentOption() {\n                return _ref6.apply(this, arguments);\n              };\n            }();\n            /*\n             * Only transform the params that can \n             * have a DOM node as their value\n             */\n            _context5.next = 5;\n            return Promise.all([transformSingleParam(), transformContentOption()]);\n          case 5:\n            newOpts = _context5.sent;\n            return _context5.abrupt(\"return\", Object.assign.apply(Object, [{}].concat(_toConsumableArray(newOpts))));\n          case 7:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return function transformParams(_x3, _x4, _x5) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\n// Transform a single option\nvar transformEl = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(el, transformer, isAsync) {\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            if (!isAsync) {\n              _context6.next = 6;\n              break;\n            }\n            _context6.next = 3;\n            return transformer(el);\n          case 3:\n            _context6.t0 = _context6.sent;\n            _context6.next = 7;\n            break;\n          case 6:\n            _context6.t0 = transformer(el);\n          case 7:\n            return _context6.abrupt(\"return\", _context6.t0);\n          case 8:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return function transformEl(_x6, _x7, _x8) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nexports['default'] = index;\nexports.bindActions = bindActions;","map":{"version":3,"names":["Object","defineProperty","exports","value","_interopDefault","ex","swal","require","index","getOptions","newOptions","bindActions","swalInstance","method","params","identifier","transformer","transformParams","assign","parseTextParams","lastParam","length","isOptionsParam","options","isString","param","text","title","icon","isTransformable","constructor","isAsync","Promise","transformSingleParam","el","transformEl","newContent","content","transformContentOption","lastParamIndex","button","all","newOpts"],"sources":["/Users/heeaelee/Documents/github/fb_test/facebook-clone/node_modules/@sweetalert/transformer/dist/transformer.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar swal = _interopDefault(require('sweetalert'));\n\nvar index = async (...args) => {\n  const newOptions = await getOptions(...args);\n\n  return swal(newOptions);\n};\n\nconst bindActions = (swalInstance) => {\n  for (const method in swal) {\n    swalInstance[method] = swal[method];\n  }\n};\n\nconst getOptions = async (params, {\n  identifier,\n  transformer,\n}) => {\n\n  let newOptions = await transformParams(\n    params, \n    identifier, \n    transformer, \n  );\n\n  newOptions = Object.assign({}, parseTextParams(params), newOptions);\n\n  const lastParam = params[params.length - 1];\n\n  /*\n   * So that we don't lose other specified options\n   * such as buttons... etc.\n   */\n  if (isOptionsParam(lastParam, identifier)) {\n    newOptions = Object.assign({}, lastParam, newOptions);\n  }\n\n  return newOptions;\n};\n\nconst parseTextParams = params => {\n  const options = {};\n\n  const isString = param => typeof param === \"string\";\n\n  if (isString(params[0]) && !isString(params[1])) {\n    options.text = params[0];\n  }\n\n  if (isString(params[1])) {\n    options.title = params[0];\n    options.text = params[1];\n  }\n\n  if (isString(params[2])) {\n    options.icon = params[2];\n  }\n\n  return options;\n};\n\n// Return true if param is a SwalOptions object\nconst isOptionsParam = (param, isTransformable) => (\n  (param.constructor === Object) && \n  (!isTransformable(param))\n);\n\n/*\n * @params: (SwalParams, Function, Function, boolean)\n * @returns: SwalOptions\n */\nconst transformParams = async (params, isTransformable, transformer) => {\n\n  // Check if the transform returns a DOM synchronously\n  // or if it is a promise:\n  const isAsync = transformer() instanceof Promise;\n\n  /*\n   * Example:\n   *   swal(<div>Hello!</div>);\n   */\n  const transformSingleParam = async () => {\n    const el = params[0];\n\n    if (!isTransformable(el)) return;\n\n    const newContent = await transformEl(el, transformer, isAsync);\n\n    return {\n      content: newContent,\n    };\n  };\n\n  /*\n   * Example:\n   *   swal(\"Hi\", { \n   *     content: <div>Hello!</div> \n   *   })\n   */\n  const transformContentOption = async () => {\n    const lastParamIndex = (params.length - 1);\n    const lastParam = params[lastParamIndex];\n\n    if (!lastParam || !lastParam.content) return;\n\n    let { content, button } = lastParam;\n\n    if (isTransformable(content)) {\n      content = await transformEl(content, transformer, isAsync);\n    }\n\n    /* TODO?\n    if (isTransformable(button)) {\n      button = await transformEl(button, transformer, isAsync);\n    }\n    */\n\n    return {\n      content,\n      //button,\n    };\n  };\n\n  /*\n   * Only transform the params that can \n   * have a DOM node as their value\n   */\n  const newOpts = await Promise.all([\n    transformSingleParam(),\n    transformContentOption(),\n  ]);\n\n  return Object.assign({}, ...newOpts);\n};\n\n// Transform a single option\nconst transformEl = async (el, transformer, isAsync) => {\n  return (isAsync) ? await transformer(el) : transformer(el);\n};\n\nexports['default'] = index;\nexports.bindActions = bindActions;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}